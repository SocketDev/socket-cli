Index: /drawille-blessed-contrib/index.js
===================================================================
--- /drawille-blessed-contrib/index.js
+++ /drawille-blessed-contrib/index.js
@@ -20,9 +20,9 @@
   this.content.fill(0);
 
   this.fontFg='normal'
   this.fontBg='normal'
-  this.color = 'normal'  
+  this.color = 'normal'
 }
 
 exports.colors = {
     black: 0
@@ -38,15 +38,15 @@
 
 var methods = {
   set: function(coord, mask) {
     this.content[coord] |= mask;
-    this.colors[coord] = exports.colors[this.color];    
+    this.colors[coord] = exports.colors[this.color];
     this.chars[coord] = null
   },
   unset: function(coord, mask) {
     this.content[coord] &= ~mask;
     this.colors[coord] = null
-    this.chars[coord] = null    
+    this.chars[coord] = null
   },
   toggle: function(coord, mask) {
     this.content[coord] ^= mask;
     this.colors[coord] = null
@@ -58,9 +58,9 @@
   Canvas.prototype[method] = function(x, y) {
     if(!(x >= 0 && x < this.width && y >= 0 && y < this.height)) {
       return;
     }
-    
+
     var coord = this.getCoord(x, y)
     var mask = map[y%4][x%2];
     methods[method].call(this, coord, mask);
   }
@@ -79,22 +79,22 @@
   this.content.fill(0);
 };
 
 Canvas.prototype.measureText = function(str) {
-  return {width: str.length * 2 + 2}  
+  return {width: str.length * 2 + 2}
 };
 
-Canvas.prototype.writeText = function(str, x, y) {  
+Canvas.prototype.writeText = function(str, x, y) {
   var coord = this.getCoord(x, y)
-  for (var i=0; i<str.length; i++) {    
+  for (var i=0; i<str.length; i++) {
     this.chars[coord+i]=str[i]
   }
 
   var bg = exports.colors[this.fontBg]
   var fg = exports.colors[this.fontFg]
-  
-  this.chars[coord] = '\033[3' + fg + 'm' + '\033[4' + bg + 'm' +  this.chars[coord]
-  this.chars[coord+str.length-1] += '\033[39m\033[49m'
+
+  this.chars[coord] = '\x1B[3' + fg + 'm' + '\x1B[4' + bg + 'm' +  this.chars[coord]
+  this.chars[coord+str.length-1] += '\x1B[39m\x1B[49m'
 }
 
 Canvas.prototype.frame = function frame(delimiter) {
   delimiter = delimiter || '\n';
@@ -109,11 +109,11 @@
       result.push(this.chars[i])
     }
     else if(this.content[i] == 0) {
       result.push(' ');
-    } else {   
-      result.push('\033[3' + this.colors[i] + 'm'+String.fromCharCode(0x2800 + this.content[i]) + '\033[39m')      
-      //result.push(String.fromCharCode(0x2800 + this.content[i]))      
+    } else {
+      result.push('\x1B[3' + this.colors[i] + 'm'+String.fromCharCode(0x2800 + this.content[i]) + '\x1B[39m')
+      //result.push(String.fromCharCode(0x2800 + this.content[i]))
     }
   }
   result.push(delimiter);
   return result.join('');
