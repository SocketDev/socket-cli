diff --git a/index.js b/index.js
index ef426720f340c981e2bb116d80070624698f0d15..305426e165371737cd7763cb2fe1faa691319750 100644
--- a/index.js
+++ b/index.js
@@ -24,51 +24,51 @@ exports.colors = {
 function getFgCode(color) {
     // String Value
     if(typeof color == 'string' && color != 'normal') {
-        return '\033[3' + exports.colors[color] + 'm';
+        return '\x1B[3' + exports.colors[color] + 'm';
     }
     // RGB Value
     else if (Array.isArray(color) && color.length == 3)
     {
-        return '\033[38;5;' + x256(color[0],color[1],color[2]) + 'm';
+        return '\x1B[38;5;' + x256(color[0],color[1],color[2]) + 'm';
     }
     // Number
     else if (typeof color == 'number')
     {
-        return '\033[38;5;' + color + 'm';
+        return '\x1B[38;5;' + color + 'm';
     }
     // Default
     else
     {
-        return '\033[39m'
+        return '\x1B[39m'
     }
 }
 
 function getBgCode(color) {
     // String Value
     if(typeof color == 'string' && color != 'normal') {
-        return '\033[4' + exports.colors[color] + 'm';
+        return '\x1B[4' + exports.colors[color] + 'm';
     }
     // RGB Value
     else if (Array.isArray(color) && color.length == 3)
     {
-        return '\033[48;5;' + x256(color[0],color[1],color[2]) + 'm';
+        return '\x1B[48;5;' + x256(color[0],color[1],color[2]) + 'm';
     }
     // Number
     else if (typeof color == 'number')
     {
-        return '\033[48;5;' + color + 'm';
+        return '\x1B[48;5;' + color + 'm';
     }
     // Default
     else
     {
-        return '\033[49m'
+        return '\x1B[49m'
     }
 }
 
 var methods = {
-  set: function(coord) {  
+  set: function(coord) {
     var color = getBgCode(this.color);
-    this.content[coord] = color + ' \033[49m';    
+    this.content[coord] = color + ' \x1B[49m';    
   },
   unset: function(coord) {    
     this.content[coord] = null;
@@ -113,7 +113,7 @@ AnsiTerminal.prototype.writeText = function(str, x, y) {
   var fg = getFgCode(this.fontFg);
   
   this.content[coord] = fg + bg +  this.content[coord]
-  this.content[coord+str.length-1] += '\033[39m\033[49m'
+  this.content[coord+str.length-1] += '\x1B[39m\x1B[49m'
 
 }
 
