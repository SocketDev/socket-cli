diff --git a/_baseExtremum.js b/_baseExtremum.js
index 9d6aa77edba62c323f18bc1cb3b52a941d84a72e..d65e725ca757deb50e4b23b829f0b8ac1968c6f4 100644
--- a/_baseExtremum.js
+++ b/_baseExtremum.js
@@ -13,7 +13,8 @@ var isSymbol = require('./isSymbol');
 function baseExtremum(array, iteratee, comparator) {
   var index = -1,
       length = array.length;
-
+  var computed;
+  var result;
   while (++index < length) {
     var value = array[index],
         current = iteratee(value);
@@ -22,8 +23,8 @@ function baseExtremum(array, iteratee, comparator) {
           ? (current === current && !isSymbol(current))
           : comparator(current, computed)
         )) {
-      var computed = current,
-          result = value;
+      computed = current;
+      result = value;
     }
   }
   return result;
diff --git a/_getRawTag.js b/_getRawTag.js
index 49a95c9c65a17148911124bf9e51ac8982769a45..430baa4f7e28a0d76cc72169885354fa845e0a1b 100644
--- a/_getRawTag.js
+++ b/_getRawTag.js
@@ -27,9 +27,10 @@ function getRawTag(value) {
   var isOwn = hasOwnProperty.call(value, symToStringTag),
       tag = value[symToStringTag];
 
+  var unmasked
   try {
     value[symToStringTag] = undefined;
-    var unmasked = true;
+    unmasked = true;
   } catch (e) {}
 
   var result = nativeObjectToString.call(value);
diff --git a/lodash.js b/lodash.js
index 4131e936cd1e0521ac7be3a9d4bfb9f1fdb35462..d7661e20678da8217482a7396d4f0c646de7f2e1 100644
--- a/lodash.js
+++ b/lodash.js
@@ -9,7 +9,6 @@
 ;(function() {
 
   /** Used as a safe reference for `undefined` in pre-ES5 environments. */
-  var undefined;
 
   /** Used as the semantic version number. */
   var VERSION = '4.17.21';
@@ -2899,7 +2898,8 @@
     function baseExtremum(array, iteratee, comparator) {
       var index = -1,
           length = array.length;
-
+      var computed;
+      var result;
       while (++index < length) {
         var value = array[index],
             current = iteratee(value);
@@ -2908,8 +2908,8 @@
               ? (current === current && !isSymbol(current))
               : comparator(current, computed)
             )) {
-          var computed = current,
-              result = value;
+          computed = current;
+          result = value;
         }
       }
       return result;
@@ -6049,9 +6049,10 @@
       var isOwn = hasOwnProperty.call(value, symToStringTag),
           tag = value[symToStringTag];
 
+      var unmasked
       try {
         value[symToStringTag] = undefined;
-        var unmasked = true;
+        unmasked = true;
       } catch (e) {}
 
       var result = nativeObjectToString.call(value);
