Index: /blessed/lib/gpmclient.js
===================================================================
--- /blessed/lib/gpmclient.js
+++ /blessed/lib/gpmclient.js
@@ -189,9 +189,9 @@
     });
   }
 }

-GpmClient.prototype.__proto__ = EventEmitter.prototype;
+Object.setPrototypeOf(GpmClient.prototype, EventEmitter.prototype);

 GpmClient.prototype.stop = function() {
   if (this.gpm) {
     this.gpm.end();
Index: /blessed/lib/program.js
===================================================================
--- /blessed/lib/program.js
+++ /blessed/lib/program.js
@@ -34,9 +34,9 @@
   Program.bind(this);

   EventEmitter.call(this);

-  if (!options || options.__proto__ !== Object.prototype) {
+  if (!options || Object.getPrototypeOf(options) !== Object.prototype) {
     options = {
       input: arguments[0],
       output: arguments[1]
     };
@@ -150,9 +150,9 @@
     });
   });
 };

-Program.prototype.__proto__ = EventEmitter.prototype;
+Object.setPrototypeOf(Program.prototype, EventEmitter.prototype);

 Program.prototype.type = 'program';

 Program.prototype.log = function() {
@@ -194,9 +194,9 @@
   function caret(data) {
     return data.replace(/[\0\x80\x1b-\x1f\x7f\x01-\x1a]/g, function(ch) {
       switch (ch) {
         case '\0':
-        case '\200':
+        case '\x80':
           ch = '@';
           break;
         case '\x1b':
           ch = '[';
@@ -1910,9 +1910,9 @@

 //Program.prototype.pad =
 Program.prototype.nul = function() {
   //if (this.has('pad')) return this.put.pad();
-  return this._write('\200');
+  return this._write('\x80');
 };

 Program.prototype.bel =
 Program.prototype.bell = function() {
Index: /blessed/lib/tput.js
===================================================================
--- /blessed/lib/tput.js
+++ /blessed/lib/tput.js
@@ -365,9 +365,9 @@
   l = i + h.numCount * 2;
   o = 0;
   for (; i < l; i += 2) {
     v = Tput.numbers[o++];
-    if (data[i + 1] === 0377 && data[i] === 0377) {
+    if (data[i + 1] === 0xFF && data[i] === 0xFF) {
       info.numbers[v] = -1;
     } else {
       info.numbers[v] = (data[i + 1] << 8) | data[i];
     }
@@ -378,9 +378,9 @@
   l = i + h.strCount * 2;
   o = 0;
   for (; i < l; i += 2) {
     v = Tput.strings[o++];
-    if (data[i + 1] === 0377 && data[i] === 0377) {
+    if (data[i + 1] === 0xFF && data[i] === 0xFF) {
       info.strings[v] = -1;
     } else {
       info.strings[v] = (data[i + 1] << 8) | data[i];
     }
@@ -532,9 +532,9 @@
   // Numbers Section
   var _numbers = [];
   l = i + h.numCount * 2;
   for (; i < l; i += 2) {
-    if (data[i + 1] === 0377 && data[i] === 0377) {
+    if (data[i + 1] === 0xFF && data[i] === 0xFF) {
       _numbers.push(-1);
     } else {
       _numbers.push((data[i + 1] << 8) | data[i]);
     }
@@ -543,9 +543,9 @@
   // Strings Section
   var _strings = [];
   l = i + h.strCount * 2;
   for (; i < l; i += 2) {
-    if (data[i + 1] === 0377 && data[i] === 0377) {
+    if (data[i + 1] === 0xFF && data[i] === 0xFF) {
       _strings.push(-1);
     } else {
       _strings.push((data[i + 1] << 8) | data[i]);
     }
@@ -842,9 +842,9 @@

     // '\e' -> ^[
     // '\n' -> \n
     // '\r' -> \r
-    // '\0' -> \200 (special case)
+    // '\0' -> \x80 (special case)
     if (read(/^\\([eEnlrtbfs\^\\,:0]|.)/, true)) {
       switch (ch) {
         case 'e':
         case 'E':
@@ -883,9 +883,9 @@
         case ':':
           ch = ':';
           break;
         case '0':
-          ch = '\200';
+          ch = '\x80';
           break;
         case 'a':
           ch = '\x07';
           break;
@@ -1900,9 +1900,9 @@
 //    case '\r':
 //      out += '\\r';
 //      i++;
 //      break;
-//    case '\200':
+//    case '\x80':
 //      out += '\\0';
 //      i++;
 //      break;
 //    case '\f':
@@ -2093,12 +2093,12 @@
       && info.name.indexOf('screen') === 0
       && process.env.TERMCAP
       && ~process.env.TERMCAP.indexOf('screen')
       && ~process.env.TERMCAP.indexOf('hhII00')) {
-    if (~info.strings.enter_alt_charset_mode.indexOf('\016')
-        || ~info.strings.enter_alt_charset_mode.indexOf('\017')
-        || ~info.strings.set_attributes.indexOf('\016')
-        || ~info.strings.set_attributes.indexOf('\017')) {
+    if (~info.strings.enter_alt_charset_mode.indexOf('\x0E')
+        || ~info.strings.enter_alt_charset_mode.indexOf('\x0F')
+        || ~info.strings.set_attributes.indexOf('\x0E')
+        || ~info.strings.set_attributes.indexOf('\x0F')) {
       return true;
     }
   }

@@ -2275,9 +2275,9 @@
       case 's': // string
         break;
       case 'c': // char
         param = isFinite(param)
-          ? String.fromCharCode(param || 0200)
+          ? String.fromCharCode(param || 0x80)
           : '';
         break;
     }

Index: /blessed/lib/widgets/ansiimage.js
===================================================================
--- /blessed/lib/widgets/ansiimage.js
+++ /blessed/lib/widgets/ansiimage.js
@@ -52,9 +52,9 @@
     self.stop();
   });
 }

-ANSIImage.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(ANSIImage.prototype, Box.prototype);

 ANSIImage.prototype.type = 'ansiimage';

 ANSIImage.curl = function(url) {
Index: /blessed/lib/widgets/bigtext.js
===================================================================
--- /blessed/lib/widgets/bigtext.js
+++ /blessed/lib/widgets/bigtext.js
@@ -35,9 +35,9 @@
     this.font = this.fontBold;
   }
 }

-BigText.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(BigText.prototype, Box.prototype);

 BigText.prototype.type = 'bigtext';

 BigText.prototype.loadFont = function(filename) {
Index: /blessed/lib/widgets/box.js
===================================================================
--- /blessed/lib/widgets/box.js
+++ /blessed/lib/widgets/box.js
@@ -22,9 +22,9 @@
   options = options || {};
   Element.call(this, options);
 }

-Box.prototype.__proto__ = Element.prototype;
+Object.setPrototypeOf(Box.prototype, Element.prototype);

 Box.prototype.type = 'box';

 /**
Index: /blessed/lib/widgets/button.js
===================================================================
--- /blessed/lib/widgets/button.js
+++ /blessed/lib/widgets/button.js
@@ -42,9 +42,9 @@
     });
   }
 }

-Button.prototype.__proto__ = Input.prototype;
+Object.setPrototypeOf(Button.prototype, Input.prototype);

 Button.prototype.type = 'button';

 Button.prototype.press = function() {
Index: /blessed/lib/widgets/checkbox.js
===================================================================
--- /blessed/lib/widgets/checkbox.js
+++ /blessed/lib/widgets/checkbox.js
@@ -55,9 +55,9 @@
     self.screen.program.lrestoreCursor('checkbox', true);
   });
 }

-Checkbox.prototype.__proto__ = Input.prototype;
+Object.setPrototypeOf(Checkbox.prototype, Input.prototype);

 Checkbox.prototype.type = 'checkbox';

 Checkbox.prototype.render = function() {
Index: /blessed/lib/widgets/element.js
===================================================================
--- /blessed/lib/widgets/element.js
+++ /blessed/lib/widgets/element.js
@@ -220,9 +220,9 @@
     this.focus();
   }
 }

-Element.prototype.__proto__ = Node.prototype;
+Object.setPrototypeOf(Element.prototype, Node.prototype);

 Element.prototype.type = 'element';

 Element.prototype.__defineGetter__('focused', function() {
Index: /blessed/lib/widgets/filemanager.js
===================================================================
--- /blessed/lib/widgets/filemanager.js
+++ /blessed/lib/widgets/filemanager.js
@@ -64,9 +64,9 @@
     });
   });
 }

-FileManager.prototype.__proto__ = List.prototype;
+Object.setPrototypeOf(FileManager.prototype, List.prototype);

 FileManager.prototype.type = 'file-manager';

 FileManager.prototype.refresh = function(cwd, callback) {
Index: /blessed/lib/widgets/form.js
===================================================================
--- /blessed/lib/widgets/form.js
+++ /blessed/lib/widgets/form.js
@@ -64,9 +64,9 @@
     });
   }
 }

-Form.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Form.prototype, Box.prototype);

 Form.prototype.type = 'form';

 Form.prototype._refresh = function() {
Index: /blessed/lib/widgets/image.js
===================================================================
--- /blessed/lib/widgets/image.js
+++ /blessed/lib/widgets/image.js
@@ -49,9 +49,9 @@

   throw new Error('`type` must either be `ansi` or `overlay`.');
 }

-Image.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Image.prototype, Box.prototype);

 Image.prototype.type = 'image';

 /**
Index: /blessed/lib/widgets/input.js
===================================================================
--- /blessed/lib/widgets/input.js
+++ /blessed/lib/widgets/input.js
@@ -22,9 +22,9 @@
   options = options || {};
   Box.call(this, options);
 }

-Input.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Input.prototype, Box.prototype);

 Input.prototype.type = 'input';

 /**
Index: /blessed/lib/widgets/layout.js
===================================================================
--- /blessed/lib/widgets/layout.js
+++ /blessed/lib/widgets/layout.js
@@ -37,9 +37,9 @@
     this.renderer = options.renderer;
   }
 }

-Layout.prototype.__proto__ = Element.prototype;
+Object.setPrototypeOf(Layout.prototype, Element.prototype);

 Layout.prototype.type = 'layout';

 Layout.prototype.isRendered = function(el) {
Index: /blessed/lib/widgets/line.js
===================================================================
--- /blessed/lib/widgets/line.js
+++ /blessed/lib/widgets/line.js
@@ -44,9 +44,9 @@

   this.style.border = this.style;
 }

-Line.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Line.prototype, Box.prototype);

 Line.prototype.type = 'line';

 /**
Index: /blessed/lib/widgets/list.js
===================================================================
--- /blessed/lib/widgets/list.js
+++ /blessed/lib/widgets/list.js
@@ -220,9 +220,9 @@
     self.removeItem(el);
   });
 }

-List.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(List.prototype, Box.prototype);

 List.prototype.type = 'list';

 List.prototype.createItem = function(content) {
Index: /blessed/lib/widgets/listbar.js
===================================================================
--- /blessed/lib/widgets/listbar.js
+++ /blessed/lib/widgets/listbar.js
@@ -102,9 +102,9 @@
     self.select(self.selected);
   });
 }

-Listbar.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Listbar.prototype, Box.prototype);

 Listbar.prototype.type = 'listbar';

 Listbar.prototype.__defineGetter__('selected', function() {
Index: /blessed/lib/widgets/listtable.js
===================================================================
--- /blessed/lib/widgets/listtable.js
+++ /blessed/lib/widgets/listtable.js
@@ -74,9 +74,9 @@
     self.screen.render();
   });
 }

-ListTable.prototype.__proto__ = List.prototype;
+Object.setPrototypeOf(ListTable.prototype, List.prototype);

 ListTable.prototype.type = 'list-table';

 ListTable.prototype._calculateMaxes = Table.prototype._calculateMaxes;
Index: /blessed/lib/widgets/loading.js
===================================================================
--- /blessed/lib/widgets/loading.js
+++ /blessed/lib/widgets/loading.js
@@ -35,9 +35,9 @@
     content: '|'
   });
 }

-Loading.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Loading.prototype, Box.prototype);

 Loading.prototype.type = 'loading';

 Loading.prototype.load = function(text) {
Index: /blessed/lib/widgets/log.js
===================================================================
--- /blessed/lib/widgets/log.js
+++ /blessed/lib/widgets/log.js
@@ -45,9 +45,9 @@
     }
   });
 }

-Log.prototype.__proto__ = ScrollableText.prototype;
+Object.setPrototypeOf(Log.prototype, ScrollableText.prototype);

 Log.prototype.type = 'log';

 Log.prototype.log =
Index: /blessed/lib/widgets/message.js
===================================================================
--- /blessed/lib/widgets/message.js
+++ /blessed/lib/widgets/message.js
@@ -25,9 +25,9 @@

   Box.call(this, options);
 }

-Message.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Message.prototype, Box.prototype);

 Message.prototype.type = 'message';

 Message.prototype.log =
Index: /blessed/lib/widgets/node.js
===================================================================
--- /blessed/lib/widgets/node.js
+++ /blessed/lib/widgets/node.js
@@ -8,17 +8,15 @@
  * Modules
  */

 var EventEmitter = require('../events').EventEmitter;
-
+console.log('node_modules error', (new Error()).stack)
 /**
  * Node
  */

 function Node(options) {
   var self = this;
-  var Screen = require('./screen');
-
   if (!(this instanceof Node)) {
     return new Node(options);
   }

@@ -29,8 +27,9 @@

   this.screen = this.screen || options.screen;

   if (!this.screen) {
+    var Screen = require('./screen');
     if (this.type === 'screen') {
       this.screen = this;
     } else if (Screen.total === 1) {
       this.screen = Screen.global;
@@ -53,9 +52,10 @@
             + ' append the element later.');
         }
       });
     } else {
-      throw new Error('No active screen.');
+      console.log('node_modules error', (new Error()).stack)
+      throw new Error('No active screen okokokokoko.');
     }
   }

   this.parent = options.parent || null;
@@ -76,9 +76,9 @@
 }

 Node.uid = 0;

-Node.prototype.__proto__ = EventEmitter.prototype;
+Object.setPrototypeOf(Node.prototype, EventEmitter.prototype);

 Node.prototype.type = 'node';

 Node.prototype.insert = function(element, i) {
Index: /blessed/lib/widgets/overlayimage.js
===================================================================
--- /blessed/lib/widgets/overlayimage.js
+++ /blessed/lib/widgets/overlayimage.js
@@ -115,9 +115,9 @@
     this.setImage(this.options.file || this.options.img);
   }
 }

-OverlayImage.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(OverlayImage.prototype, Box.prototype);

 OverlayImage.prototype.type = 'overlayimage';

 OverlayImage.w3mdisplay = '/usr/lib/w3m/w3mimgdisplay';
Index: /blessed/lib/widgets/progressbar.js
===================================================================
--- /blessed/lib/widgets/progressbar.js
+++ /blessed/lib/widgets/progressbar.js
@@ -91,9 +91,9 @@
     });
   }
 }

-ProgressBar.prototype.__proto__ = Input.prototype;
+Object.setPrototypeOf(ProgressBar.prototype, Input.prototype);

 ProgressBar.prototype.type = 'progress-bar';

 ProgressBar.prototype.render = function() {
Index: /blessed/lib/widgets/prompt.js
===================================================================
--- /blessed/lib/widgets/prompt.js
+++ /blessed/lib/widgets/prompt.js
@@ -66,9 +66,9 @@
     mouse: true
   });
 }

-Prompt.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Prompt.prototype, Box.prototype);

 Prompt.prototype.type = 'prompt';

 Prompt.prototype.input =
Index: /blessed/lib/widgets/question.js
===================================================================
--- /blessed/lib/widgets/question.js
+++ /blessed/lib/widgets/question.js
@@ -57,9 +57,9 @@
     mouse: true
   });
 }

-Question.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Question.prototype, Box.prototype);

 Question.prototype.type = 'question';

 Question.prototype.ask = function(text, callback) {
Index: /blessed/lib/widgets/radiobutton.js
===================================================================
--- /blessed/lib/widgets/radiobutton.js
+++ /blessed/lib/widgets/radiobutton.js
@@ -41,9 +41,9 @@
     });
   });
 }

-RadioButton.prototype.__proto__ = Checkbox.prototype;
+Object.setPrototypeOf(RadioButton.prototype, Checkbox.prototype);

 RadioButton.prototype.type = 'radio-button';

 RadioButton.prototype.render = function() {
Index: /blessed/lib/widgets/radioset.js
===================================================================
--- /blessed/lib/widgets/radioset.js
+++ /blessed/lib/widgets/radioset.js
@@ -24,9 +24,9 @@
   // options.style = this.parent.style;
   Box.call(this, options);
 }

-RadioSet.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(RadioSet.prototype, Box.prototype);

 RadioSet.prototype.type = 'radio-set';

 /**
Index: /blessed/lib/widgets/screen.js
===================================================================
--- /blessed/lib/widgets/screen.js
+++ /blessed/lib/widgets/screen.js
@@ -17,22 +17,16 @@
   , unicode = require('../unicode');

 var nextTick = global.setImmediate || process.nextTick.bind(process);

-var helpers = require('../helpers');
-
 var Node = require('./node');
-var Log = require('./log');
-var Element = require('./element');
-var Box = require('./box');

 /**
  * Screen
  */

 function Screen(options) {
   var self = this;
-
   if (!(this instanceof Node)) {
     return new Screen(options);
   }

@@ -240,9 +234,9 @@
     });
   });
 };

-Screen.prototype.__proto__ = Node.prototype;
+Object.setPrototypeOf(Screen.prototype, Node.prototype);

 Screen.prototype.type = 'screen';

 Screen.prototype.__defineGetter__('title', function() {
@@ -333,8 +327,9 @@

 Screen.prototype.postEnter = function() {
   var self = this;
   if (this.options.debug) {
+    var Log = require('./log');
     this.debugLog = new Log({
       screen: this,
       parent: this,
       hidden: true,
@@ -378,8 +373,9 @@
   }

   if (this.options.warnings) {
     this.on('warning', function(text) {
+      var Box = require('./box');
       var warning = new Box({
         screen: self,
         parent: self,
         left: 'center',
@@ -476,8 +472,9 @@
   this.program.on('mouse', function(data) {
     if (self.lockKeys) return;

     if (self._needsClickableSort) {
+      var helpers = require('../helpers');
       self.clickable = helpers.hsort(self.clickable);
       self._needsClickableSort = false;
     }

@@ -619,9 +616,9 @@

   if (this._hoverText) {
     return;
   }
-
+  var Box = require('./box');
   this._hoverText = new Box({
     screen: this,
     left: 0,
     top: 0,
@@ -2071,8 +2068,9 @@
     attr &= ~(0x1ff << 9);
     attr |= 7 << 9;
     attr |= 8 << 18;
   } else if (typeof cursor.shape === 'object' && cursor.shape) {
+    var Element = require('./element');
     cattr = Element.prototype.sattr.call(cursor, cursor.shape);

     if (cursor.shape.bold || cursor.shape.underline
         || cursor.shape.blink || cursor.shape.inverse
Index: /blessed/lib/widgets/scrollablebox.js
===================================================================
--- /blessed/lib/widgets/scrollablebox.js
+++ /blessed/lib/widgets/scrollablebox.js
@@ -167,9 +167,9 @@

   self._recalculateIndex();
 }

-ScrollableBox.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(ScrollableBox.prototype, Box.prototype);

 ScrollableBox.prototype.type = 'scrollable-box';

 // XXX Potentially use this in place of scrollable checks elsewhere.
Index: /blessed/lib/widgets/scrollabletext.js
===================================================================
--- /blessed/lib/widgets/scrollabletext.js
+++ /blessed/lib/widgets/scrollabletext.js
@@ -23,9 +23,9 @@
   options.alwaysScroll = true;
   ScrollableBox.call(this, options);
 }

-ScrollableText.prototype.__proto__ = ScrollableBox.prototype;
+Object.setPrototypeOf(ScrollableText.prototype, ScrollableBox.prototype);

 ScrollableText.prototype.type = 'scrollable-text';

 /**
Index: /blessed/lib/widgets/table.js
===================================================================
--- /blessed/lib/widgets/table.js
+++ /blessed/lib/widgets/table.js
@@ -53,9 +53,9 @@
     self.screen.render();
   });
 }

-Table.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Table.prototype, Box.prototype);

 Table.prototype.type = 'table';

 Table.prototype._calculateMaxes = function() {
Index: /blessed/lib/widgets/terminal.js
===================================================================
--- /blessed/lib/widgets/terminal.js
+++ /blessed/lib/widgets/terminal.js
@@ -51,9 +51,9 @@

   this.bootstrap();
 }

-Terminal.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Terminal.prototype, Box.prototype);

 Terminal.prototype.type = 'terminal';

 Terminal.prototype.bootstrap = function() {
Index: /blessed/lib/widgets/text.js
===================================================================
--- /blessed/lib/widgets/text.js
+++ /blessed/lib/widgets/text.js
@@ -23,9 +23,9 @@
   options.shrink = true;
   Element.call(this, options);
 }

-Text.prototype.__proto__ = Element.prototype;
+Object.setPrototypeOf(Text.prototype, Element.prototype);

 Text.prototype.type = 'text';

 /**
Index: /blessed/lib/widgets/textarea.js
===================================================================
--- /blessed/lib/widgets/textarea.js
+++ /blessed/lib/widgets/textarea.js
@@ -64,9 +64,9 @@
     });
   }
 }

-Textarea.prototype.__proto__ = Input.prototype;
+Object.setPrototypeOf(Textarea.prototype, Input.prototype);

 Textarea.prototype.type = 'textarea';

 Textarea.prototype._updateCursor = function(get) {
Index: /blessed/lib/widgets/textbox.js
===================================================================
--- /blessed/lib/widgets/textbox.js
+++ /blessed/lib/widgets/textbox.js
@@ -29,9 +29,9 @@
   this.secret = options.secret;
   this.censor = options.censor;
 }

-Textbox.prototype.__proto__ = Textarea.prototype;
+Object.setPrototypeOf(Textbox.prototype, Textarea.prototype);

 Textbox.prototype.type = 'textbox';

 Textbox.prototype.__olistener = Textbox.prototype._listener;
Index: /blessed/lib/widgets/video.js
===================================================================
--- /blessed/lib/widgets/video.js
+++ /blessed/lib/widgets/video.js
@@ -104,9 +104,9 @@
     self.screen.render();
   });
 }

-Video.prototype.__proto__ = Box.prototype;
+Object.setPrototypeOf(Video.prototype, Box.prototype);

 Video.prototype.type = 'video';

 Video.prototype.exists = function(program) {
Index: /blessed/package.json
===================================================================
--- /blessed/package.json
+++ /blessed/package.json
@@ -1,21 +1,12 @@
 {
   "name": "blessed",
+  "private": true,
   "description": "A high-level terminal interface library for node.js.",
   "author": "Christopher Jeffrey",
   "version": "0.1.81",
   "license": "MIT",
   "main": "./lib/blessed.js",
-  "bin": "./bin/tput.js",
-  "preferGlobal": false,
   "repository": "git://github.com/chjj/blessed.git",
   "homepage": "https://github.com/chjj/blessed",
-  "bugs": { "url": "http://github.com/chjj/blessed/issues" },
-  "keywords": ["curses", "tui", "tput", "terminfo", "termcap"],
-  "tags": ["curses", "tui", "tput", "terminfo", "termcap"],
-  "engines": {
-    "node": ">= 0.8.0"
-  },
-  "browserify": {
-    "transform": ["./browser/transform.js"]
-  }
+  "bugs": { "url": "http://github.com/chjj/blessed/issues" }
 }
Index: /blessed/vendor/tng.js
===================================================================
--- /blessed/vendor/tng.js
+++ /blessed/vendor/tng.js
@@ -47,13 +47,9 @@
     : buf.readUInt16BE(0) === 0xffd8 ? 'jpg'
     : path.extname(this.file).slice(1).toLowerCase() || 'png';

   if (this.format !== 'png') {
-    try {
-      return this.toPNG(buf);
-    } catch (e) {
-      throw e;
-    }
+    return this.toPNG(buf);
   }

   chunks = this.parseRaw(buf);
   idat = this.parseChunks(chunks);
@@ -67,9 +63,8 @@
 PNG.prototype.parseRaw = function(buf) {
   var chunks = []
     , index = 0
     , i = 0
-    , buf
     , len
     , type
     , name
     , data
@@ -480,9 +475,8 @@
     , filter_type
     , scanline
     , flat
     , offset
-    , k
     , end_offset
     , skip
     , j
     , k
@@ -591,11 +585,11 @@
   return bmp;
 };

 PNG.prototype.createCellmap = function(bmp, options) {
-  var bmp = bmp || this.bmp
-    , options = options || this.options
-    , cellmap = []
+  bmp = bmp || this.bmp
+  options = options || this.options
+  var cellmap = []
     , scale = options.scale || 0.20
     , height = bmp.length
     , width = bmp[0].length
     , cmwidth = options.width
@@ -604,9 +598,8 @@
     , x
     , y
     , xx
     , yy
-    , scale
     , xs
     , ys;

   if (cmwidth) {
