name: 'Setup PNPM'
description: 'Set up Node.js, PNPM, and configure caching for faster builds'

inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '22'
  pnpm-version:
    description: 'PNPM version to use'
    required: false
    default: '^10.16.0'
  install-deps:
    description: 'Whether to install dependencies'
    required: false
    default: 'true'
  socket-scan:
    description: 'Whether to run Socket security scan during install'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      with:
        node-version: ${{ inputs.node-version }}

    - name: Setup PNPM
      uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: echo "store-path=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Generate cache prefix
      id: pnpm-timed-expiration
      shell: bash
      # Change cache prefix every 120 days.
      run: echo "prefix=$(( $(date +%s) / 60 / 60 / 24 / 120 ))" >> $GITHUB_OUTPUT

    - name: Cache pnpm
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ${{ steps.pnpm-cache.outputs.store-path }}
        # Cache key based on pnpm-lock.yaml hash and timed prefix.
        key: ${{ runner.os }}-pnpm-store-${{ steps.pnpm-timed-expiration.outputs.prefix }}-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-${{ steps.pnpm-timed-expiration.outputs.prefix }}-

    - name: Socket security scan
      if: ${{ inputs.install-deps == 'true' && inputs.socket-scan == 'true' }}
      shell: bash
      run: pnpm dlx @socketsecurity/cli --config '{"settings":{"reportLevel":"error"}}' npm install --no-audit --no-fund --package-lock-only

    - name: Install dependencies with pnpm
      if: ${{ inputs.install-deps == 'true' && inputs.socket-scan == 'true' }}
      shell: bash
      run: |
        rm -f package-lock.json
        pnpm install

    - name: Install dependencies
      if: ${{ inputs.install-deps == 'true' && inputs.socket-scan == 'false' }}
      shell: bash
      run: pnpm install
