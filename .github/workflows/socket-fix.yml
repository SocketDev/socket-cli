name: Socket Fix

on:
  schedule:
    - cron: '0 0 * * *'   # Run daily at midnight UTC
    - cron: '0 12 * * *'  # Run daily at noon UTC
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug output'
        required: false
        default: '0'
        type: string
        options:
          - '0'
          - '1'

permissions:
  contents: write         # Required to push branches
  pull-requests: write    # Required to open PRs

jobs:
  socket-fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22'

      - name: Setup PNPM
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: '^10.16.0'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "store-path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Generate cache prefix
        id: pnpm-timed-expiration
        shell: bash
        # Change cache prefix every 120 days.
        run: echo "prefix=$(( $(date +%s) / 60 / 60 / 24 / 120 ))" >> $GITHUB_OUTPUT

      - name: Cache pnpm
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ${{ steps.pnpm-cache.outputs.store-path }}
          # Cache key based on pnpm-lock.yaml hash and timed prefix.
          key: ${{ runner.os }}-pnpm-store-${{ steps.pnpm-timed-expiration.outputs.prefix }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ steps.pnpm-timed-expiration.outputs.prefix }}-

      - name: Install dependencies
        shell: bash
        run: pnpm install

      - name: Run Socket Fix CLI
        env:
          DEBUG: ${{ inputs.debug == '1' && 'notice,error,inspect' || '' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOCKET_CLI_API_TOKEN: ${{ secrets.SOCKET_CLI_API_TOKEN }}
          SOCKET_CLI_DEBUG: ${{ inputs.debug }}
        run: pnpm dlx @socketsecurity/cli fix --autopilot
