name: ðŸš€ CI Pipeline

# Dependencies:
#   - SocketDev/socket-registry/.github/workflows/ci.yml

on:
  push:
    branches: [main]
    tags: ['*']
    paths:
      - 'packages/cli/**'
      - 'pnpm-lock.yaml'
      - 'package.json'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'packages/cli/**'
      - 'pnpm-lock.yaml'
      - 'package.json'
      - '.github/workflows/ci.yml'
  workflow_dispatch:
    inputs:
      skip-tests:
        description: 'Skip test execution'
        required: false
        type: boolean
        default: false
      node-versions:
        description: 'Node.js versions to test (JSON array)'
        required: false
        type: string
        default: '[20, 22, 24]'

permissions:
  contents: read

jobs:
  ci:
    name: Run CI Pipeline
    uses: SocketDev/socket-registry/.github/workflows/ci.yml@ed3c6104ebfbabb657432e79a7f77cf7d33df984 # 2025-10-31
    with:
      test-setup-script: 'pnpm --filter @socketsecurity/cli run build'
      lint-script: 'pnpm --filter @socketsecurity/cli run check'
      type-check-script: 'pnpm --filter @socketsecurity/cli run type'
      test-script: ${{ inputs.skip-tests && 'echo "Tests skipped"' || 'pnpm --filter @socketsecurity/cli run test:unit' }}
      node-versions: ${{ inputs.node-versions || '[20, 22, 24]' }}
      os-versions: '["ubuntu-latest", "macos-latest", "windows-latest"]'
      fail-fast: false
      # Increase parallelization for socket-cli's longer test suite (~48s).
      # Default is 4, we increase to 8 for better performance.
      max-parallel: 8
      # Increase timeout for slower subprocess-heavy tests.
      test-timeout-minutes: 20

  # Sharded unit tests (optional, enable for faster CI).
  # To enable: uncomment this job and set `run-test: false` in the ci job above.
  # test-sharded:
  #   name: Unit Tests (Sharded ${{ matrix.shard }}/3)
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 15
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: ${{ fromJSON(inputs.node-versions || '[20, 22, 24]') }}
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #       shard: [1, 2, 3]
  #   steps:
  #     - uses: SocketDev/socket-registry/.github/actions/setup-and-install@51be85d39d3b4a42dd9d4712948b9d30a2e04794
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #
  #     - name: Build CLI
  #       working-directory: packages/cli
  #       run: pnpm run build
  #
  #     - name: Run unit tests (shard ${{ matrix.shard }})
  #       working-directory: packages/cli
  #       run: pnpm test:unit --shard=${{ matrix.shard }}/3

  e2e:
    name: E2E Tests
    needs: ci
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        node-version: ${{ fromJSON(inputs.node-versions || '[20, 22, 24]') }}
        os: [ubuntu-latest]
    steps:
      - uses: SocketDev/socket-registry/.github/actions/setup-and-install@51be85d39d3b4a42dd9d4712948b9d30a2e04794
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build CLI
        working-directory: packages/cli
        run: pnpm run build

      - name: Run e2e tests
        working-directory: packages/cli
        env:
          SOCKET_CLI_API_TOKEN: ${{ secrets.SOCKET_CLI_API_TOKEN }}
        run: pnpm run e2e-tests
