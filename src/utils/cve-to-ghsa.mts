import { getErrorCause } from './error/errors.mjs'
import { cacheFetch, getOctokit } from './git/github.mjs'

import type { CResult } from '../types.mjs'

/**
 * Converts CVE IDs to GHSA IDs using GitHub API.
 */
export async function convertCveToGhsa(
  cveId: string,
): Promise<CResult<string>> {
  try {
    const cacheKey = `cve-to-ghsa-${cveId}`
    const octokit = getOctokit()

    const response = await cacheFetch(cacheKey, () =>
      octokit.rest.securityAdvisories.listGlobalAdvisories({
        cve_id: cveId,
        per_page: 1,
      }),
    )

    if (!response.data.length) {
      return {
        ok: false,
        message: `No GHSA found for CVE ${cveId}`,
      }
    }

    return {
      ok: true,
      data: response.data[0]!.ghsa_id,
    }
  } catch (e) {
    return {
      ok: false,
      message: `Failed to convert CVE to GHSA: ${getErrorCause(e)}`,
    }
  }
}
