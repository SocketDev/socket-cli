# @node-versions: v24.10.0+
# @description: Enable socket_brotli2c build tool for Brotli compression
# @requires: tools/socket_brotli2c.cc
#
# Adds the socket_brotli2c build target to node.gyp, which compiles the
# Socket Brotli compression tool used to convert Brotli-compressed data
# into C++ byte arrays for embedding in the Node.js binary.
#
# This patch also modifies the node_js2c action to use socket_brotli2c
# instead of the standard js2c tool, ensuring Brotli-compressed binary
# data is output as byte arrays rather than string literals.
#
# This enables Brotli compression of JavaScript built-in modules for
# approximately 3.36 MB binary size reduction.
#
# CRITICAL: socket_brotli2c does NOT define NODE_JS2C_USE_STRING_LITERALS because
# Brotli-compressed binary data must be output as byte arrays, not string literals.
#
# PATCH CREATION PROCESS:
# This patch was created using git diff against POST-yao-pkg Node.js v24.10.0 source.
# Steps:
#   1. Clone Node.js v24.10.0
#   2. Apply yao-pkg patches: patch -p1 < node.v24.10.0.cpp.patch
#   3. Modify node.gyp to:
#      - Add socket_brotli2c target
#      - Add socket_brotli2c_exec variable
#      - Modify node_js2c action to use socket_brotli2c_exec
#   4. Generate patch with: git add node.gyp && git diff --cached
#   5. Validate with: git reset --hard && patch -p1 --dry-run < patch-file
#
# CRITICAL: This patch MUST be applied AFTER yao-pkg patches, not to pristine source!
#
diff --git a/node.gyp b/node.gyp
index 420d5713..8e9a2c1f 100644
--- a/node.gyp
+++ b/node.gyp
@@ -433,6 +433,7 @@
     ],
     'node_mksnapshot_exec': '<(PRODUCT_DIR)/<(EXECUTABLE_PREFIX)node_mksnapshot<(EXECUTABLE_SUFFIX)',
     'node_js2c_exec': '<(PRODUCT_DIR)/<(EXECUTABLE_PREFIX)node_js2c<(EXECUTABLE_SUFFIX)',
+    'socket_brotli2c_exec': '<(PRODUCT_DIR)/<(EXECUTABLE_PREFIX)socket_brotli2c<(EXECUTABLE_SUFFIX)',
     'conditions': [
       ['GENERATOR == "ninja"', {
         'node_text_start_object_path': 'src/large_pages/node_text_start.node_text_start.o'
@@ -1023,10 +1024,10 @@
       ],
       'actions': [
         {
           'action_name': 'node_js2c',
           'process_outputs_as_sources': 1,
           'inputs': [
-            '<(node_js2c_exec)',
+            '<(socket_brotli2c_exec)',
             '<@(library_files)',
             '<@(deps_files)',
             'config.gypi'
@@ -1035,7 +1036,7 @@
             '<(SHARED_INTERMEDIATE_DIR)/node_javascript.cc',
           ],
           'action': [
-            '<(node_js2c_exec)',
+            '<(socket_brotli2c_exec)',
             '<@(_outputs)',
             'lib',
             'config.gypi',
@@ -1389,6 +1390,43 @@
         }],
       ]
     },
+    {
+      'target_name': 'socket_brotli2c',
+      'type': 'executable',
+      'toolsets': ['host'],
+      'defines!': ['NODE_JS2C_USE_STRING_LITERALS'],
+      'include_dirs': [
+        'tools',
+        'src',
+      ],
+      'sources': [
+        'tools/socket_brotli2c.cc',
+        'tools/executable_wrapper.h',
+        'src/embedded_data.h',
+        'src/embedded_data.cc',
+      ],
+      'conditions': [
+        [ 'node_shared_simdutf=="false"', {
+          'dependencies': [ 'tools/v8_gypfiles/v8.gyp:simdutf#host' ],
+        }],
+        [ 'node_shared_libuv=="false"', {
+          'dependencies': [ 'deps/uv/uv.gyp:libuv#host' ],
+        }],
+        [ 'node_shared_brotli=="false"', {
+          'dependencies': [ 'deps/brotli/brotli.gyp:brotli#host' ],
+        }],
+        [ 'debug_node=="true"', {
+          'cflags!': [ '-O3' ],
+          'cflags': [ '-g', '-O0' ],
+          'defines': [ 'DEBUG' ],
+          'xcode_settings': {
+            'OTHER_CFLAGS': [
+              '-g', '-O0'
+            ],
+          },
+        }],
+      ]
+    },
     {
       'target_name': 'node_mksnapshot',
       'type': 'executable',
