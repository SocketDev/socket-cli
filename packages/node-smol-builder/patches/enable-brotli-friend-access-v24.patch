# @node-versions: v24+
# @description: Grant friend access for Socket Brotli decompression (minimal touch)
# @phase: 3
#
# MINIMAL PATCH: Only 10 lines added to node_union_bytes.h
#
# This patch grants friend access to socketsecurity::builtins::UnionBytesAccessor,
# allowing our external Brotli loader to access UnionBytes private members
# for decompression. This is the minimal change required - all decompression
# logic lives in the external socket_brotli_builtin_loader.h header.
#
# Design: We use a separate accessor struct (not direct function friendship)
# to minimize the friend declaration surface and clearly separate concerns.
#
# IMPORTANT: Forward declaration MUST be in global namespace (before node namespace)
# to avoid name collisions and ensure correct friend declaration matching.

diff --git a/src/node_union_bytes.h b/src/node_union_bytes.h
index 4a3f6798..3a144bdb 100644
--- a/src/node_union_bytes.h
+++ b/src/node_union_bytes.h
@@ -6,6 +6,13 @@

 #include "v8.h"

+// Socket: Forward declaration for external Brotli loader (must be in global namespace).
+namespace socketsecurity {
+namespace builtins {
+struct UnionBytesAccessor;
+}
+}
+
 namespace node {

 // An external resource intended to be used with static lifetime.
@@ -67,6 +74,9 @@ class UnionBytes {

   bool is_one_byte() const { return one_byte_resource_ != nullptr; }

+  // Socket: Grant access to external Brotli loader.
+  friend struct ::socketsecurity::builtins::UnionBytesAccessor;
+
   v8::Local<v8::String> ToStringChecked(v8::Isolate* isolate) const;

  private:
